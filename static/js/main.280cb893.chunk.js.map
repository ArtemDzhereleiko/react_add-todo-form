{"version":3,"sources":["component/TodoTasks/TodoTasks.jsx","proptypes.js","component/TodoForm/TodoFrom.jsx","api/users.js","api/todosFromServer.js","App.js","index.js"],"names":["TodoTasks","PropTypes","number","isRequired","string","bool","todos","users","className","map","todo","key","id","completed","find","user","userId","name","title","style","formStyle","margin","padding","border","borderRadius","alertMessage","color","TodoForm","state","selectedUser","titleText","completedTodo","buttonWasClicked","handleChange","event","target","value","type","checked","setState","handlerButton","props","setTodos","length","this","onChange","disabled","placeholder","htmlFor","onClick","React","PureComponent","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","App","todosFromServer","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.280cb893.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { todosProps, usersProps } from '../../proptypes';\n\nexport const TodoTasks = ({ todos, users }) => (\n  <table className=\"table\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Name</th>\n        <th>Title</th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          className={`table-${todo.completed ? 'success' : 'danger'}`}\n        >\n          <td>{todo.id}</td>\n          <td>{users.find(user => user.id === todo.userId).name}</td>\n          <td>{todo.title}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTodoTasks.propTypes = {\n  todos: PropTypes.arrayOf(todosProps).isRequired,\n  users: PropTypes.arrayOf(usersProps).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const todosProps = {\n  userId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n\nexport const usersProps = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { todosProps, usersProps } from '../../proptypes';\n\nconst style = {\n  formStyle: {\n    margin: '15px',\n    padding: '15px',\n    border: '1px solid lightgrey',\n    borderRadius: '10px',\n  },\n  alertMessage: {\n    color: 'red',\n  },\n};\n\nexport class TodoForm extends React.PureComponent {\n  state ={\n    selectedUser: '',\n    titleText: '',\n    completedTodo: false,\n    buttonWasClicked: false,\n  }\n\n  handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n\n    this.setState({ [name]: type === 'checkbox' ? checked : value });\n  };\n\n  handlerButton = () => {\n    const { selectedUser, titleText, completedTodo }\n      = this.state;\n    const { todos } = this.props;\n\n    this.setState({ buttonWasClicked: true });\n\n    if (selectedUser && titleText) {\n      this.props.setTodos({\n        userId: +selectedUser,\n        id: todos.length + 1,\n        title: titleText,\n        completed: completedTodo,\n      });\n\n      this.setState({\n        selectedUser: '',\n        titleText: '',\n        completedTodo: false,\n        buttonWasClicked: false,\n      });\n    }\n  }\n\n  render() {\n    const { users } = this.props;\n    const { selectedUser } = this.state;\n\n    return (\n      <form className=\"mx-auto w-50\" style={style.formStyle}>\n        <select\n          name=\"selectedUser\"\n          id=\"userName\"\n          className=\"form-select form-select-lg mb-1\"\n          value={selectedUser}\n          onChange={event => this.handleChange(event)}\n        >\n          <option value=\"\" disabled>Select User</option>\n          {users.map(user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        { ((this.state.buttonWasClicked && !this.state.selectedUser)\n          && (\n          <div className=\"d-flex mb-1\" style={style.alertMessage}>\n            Please enter the title\n          </div>\n          )\n        )}\n\n        <textarea\n          className=\"form-control mb-1\"\n          name=\"titleText\"\n          id=\"title\"\n          placeholder=\"Write title\"\n          value={this.state.titleText}\n          onChange={event => this.handleChange(event)}\n        />\n\n        { ((this.state.buttonWasClicked && !this.state.titleText)\n          && (\n          <div className=\"d-flex mb-1\" style={style.alertMessage}>\n            Please enter the title\n          </div>\n          )\n        )}\n        <div className=\"form-check form-switch d-flex justify-content-start\">\n          <input\n            className=\"form-check-input me-3\"\n            name=\"completedTodo\"\n            type=\"checkbox\"\n            id=\"flexSwitchCheckChecked\"\n            checked={this.state.completedTodo}\n            onChange={event => this.handleChange(event)}\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor=\"flexSwitchCheckChecked\"\n          >\n            Compleated\n          </label>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-lg\"\n          onClick={() => this.handlerButton()}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  todos: PropTypes.arrayOf(todosProps).isRequired,\n  users: PropTypes.arrayOf(usersProps).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { TodoTasks } from './component/TodoTasks';\nimport { TodoForm } from './component/TodoForm';\n\nimport users from './api/users';\nimport todosFromServer from './api/todosFromServer';\n\nclass App extends React.PureComponent {\n  state = {\n    todos: todosFromServer,\n  }\n\n  setTodos = (newTodo) => {\n    this.setState(state => ({ todos: [\n      ...state.todos,\n      newTodo,\n    ] }));\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <TodoTasks users={users} todos={todos} />\n\n        <TodoForm users={users} todos={todos} setTodos={this.setTodos} />\n\n        <p>\n          <span>Users: </span>\n          {users.length}\n          <br />\n          <span>Todos: </span>\n          {todos.length}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}